(()=>{"use strict";var e={698:(e,s)=>{function n(e){return"object"!=typeof e?e:e.message?e.message:"unknown kondor error"}async function r(e){return new Promise((s=>setTimeout(s,e)))}Object.defineProperty(s,"__esModule",{value:!0}),s.Messenger=void 0;class t{constructor(e){if(this.listeners=[],this.onExtensionRequest=()=>Promise.resolve(),this.onDomRequest=()=>Promise.resolve(),e){if(e.onExtensionRequest){this.onExtensionRequest=e.onExtensionRequest;const s=async(e,s,n)=>{n();const{id:r,command:t}=e;if(!t)return;const o={id:r};try{const n=await this.onExtensionRequest(e,r,s);if("object"==typeof n&&null!==n&&n._derived)return;o.result=n}catch(e){o.error=e.message}(void 0!==o.result||o.error)&&this.sendResponse("extension",o,s)};this.listeners.push({type:"extension",id:"onRequest",listener:s}),chrome.runtime.onMessage.addListener(s)}if(e.onDomRequest){this.onDomRequest=e.onDomRequest;const s=async e=>{const{id:s,command:n}=e.data;if(!n)return;const r={id:s};try{const n=await this.onDomRequest(e,s);if("object"==typeof n&&null!==n&&n._derived)return;r.result=n}catch(e){r.error=e.message}(void 0!==r.result||r.error)&&this.sendResponse("dom",r)};this.listeners.push({type:"dom",id:"onRequest",listener:s}),window.addEventListener("message",s)}}}sendResponse(e,s,n){"dom"===e?window.postMessage(s,"*"):n&&n.tab?chrome.tabs.sendMessage(n.tab.id,s):chrome.runtime.sendMessage(s)}async sendDomMessage(e,s,r){const t=crypto.randomUUID();return new Promise(((o,a)=>{const i=e=>{if(e.data.command)return;const{id:s,result:r,error:i}=e.data;s===t&&(i?a(new Error(n(i))):o(r),this.removeListener(t))};this.listeners.push({type:"dom",id:t,listener:i}),window.addEventListener("message",i),window.postMessage({id:t,command:s,args:r?JSON.parse(JSON.stringify(r)):r,to:e},"*")}))}async sendExtensionMessage(e,s,t,o){const a=crypto.randomUUID();return new Promise(((i,c)=>{const d=(e,s,r)=>{if(r(),e.command)return;const{id:t,result:o,error:d}=e;t===a&&(d?c(new Error(n(d))):i(o),this.removeListener(a))};this.listeners.push({type:"extension",id:a,listener:d}),chrome.runtime.onMessage.addListener(d);const g=()=>{["popup","background"].includes(e)?chrome.runtime.sendMessage({id:a,command:s,args:t?JSON.parse(JSON.stringify(t)):t,to:e}):chrome.tabs.sendMessage(e,{id:a,command:s,args:t?JSON.parse(JSON.stringify(t)):t,to:e})};g(),o&&o.timeout&&setTimeout((()=>{c(new Error("Connection lost")),this.removeListener(a)}),o.timeout),o&&o.ping&&(async()=>{let s=(null==o?void 0:o.retries)||0;for(await r(1e3);this.listeners.find((e=>e.id===a));)try{await this.sendExtensionMessage(e,"ping",{id:a,to:e},{timeout:(null==o?void 0:o.pingTimeout)||80}),await r(1e3)}catch(e){if(s<=0){c(e),this.removeListener(a);break}s-=1,console.log(`retrying ${a}. remaining retries: ${s}`),g(),await r(100)}})().then((()=>{})).catch((e=>{console.log("ping error:"),console.log(e)}))}))}removeListener(e){const s=this.listeners.findIndex((s=>s.id===e));if(s<0)return;const n=this.listeners.splice(s,1),{listener:r,type:t}=n[0];"dom"===t?window.removeEventListener("message",r):chrome.runtime.onMessage.removeListener(r)}removeListeners(){this.listeners.forEach((e=>{const{type:s,listener:n}=e;"dom"===s?window.removeEventListener("message",n):chrome.runtime.onMessage.removeListener(n)})),this.listeners=[]}}s.default=t,s.Messenger=t},339:(e,s,n)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.getAccounts=void 0;const r=new(n(698).Messenger);async function t(){return r.sendDomMessage("popup","getAccounts",{})}s.getAccounts=t,s.default=t},599:(e,s,n)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.provider=void 0;const r=new(n(698).Messenger)({});s.provider={call:async(e,s)=>r.sendDomMessage("background","provider:call",{method:e,params:s}),getNonce:async e=>r.sendDomMessage("background","provider:getNonce",{account:e}),getAccountRc:async e=>r.sendDomMessage("background","provider:getAccountRc",{account:e}),getTransactionsById:async e=>r.sendDomMessage("background","provider:getTransactionsById",{transactionIds:e}),getBlocksById:async e=>r.sendDomMessage("background","provider:getBlocksById",{blockIds:e}),getHeadInfo:async()=>r.sendDomMessage("background","provider:getHeadInfo"),getChainId:async()=>r.sendDomMessage("background","provider:getChainId"),getBlocks:async(e,s=1,n)=>r.sendDomMessage("background","provider:getBlocks",{height:e,numBlocks:s,idRef:n}),getBlock:async e=>r.sendDomMessage("background","provider:getBlock",{height:e}),wait:async(e,s="byBlock",n=3e4)=>r.sendDomMessage("background","provider:wait",{txId:e,type:s,timeout:n}),async sendTransaction(e,s=!0){const n=await r.sendDomMessage("background","provider:sendTransaction",{transaction:e,broadcast:s});return n.transaction.wait=async(e="byBlock",s=6e4)=>r.sendDomMessage("background","provider:wait",{txId:n.transaction.id,type:e,timeout:s}),n},submitBlock:async e=>r.sendDomMessage("background","provider:submitBlock",{block:e}),readContract:async e=>r.sendDomMessage("background","provider:readContract",{operation:e})},s.default=s.provider},942:(e,s,n)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.getSigner=s.signer=void 0;const r=new(n(698).Messenger)({});function t(e){console.warn(`The function kondor.signer.${e} will be deprecated in the future. Please use kondor.getSigner(signerAddress).${e}`)}function o(e){return{getAddress:()=>e,getPrivateKey:()=>{throw new Error("getPrivateKey is not available")},signHash:s=>r.sendDomMessage("popup","signer:signHash",{signerAddress:e,hash:s}),signMessage:s=>r.sendDomMessage("popup","signer:signMessage",{signerAddress:e,message:s}),prepareTransaction:async s=>await r.sendDomMessage("background","signer:prepareTransaction",{signerAddress:e,transaction:s}),signTransaction:async(s,n)=>r.sendDomMessage("popup","signer:signTransaction",{signerAddress:e,transaction:s,abis:n}),sendTransaction:async(s,n,t)=>{const o=await r.sendDomMessage("popup","signer:sendTransaction",{signerAddress:e,transaction:s,broadcast:n,abis:t});return o.transaction.wait=async(e="byBlock",s=6e4)=>r.sendDomMessage("background","provider:wait",{txId:o.transaction.id,type:e,timeout:s}),o},prepareBlock:()=>{throw new Error("prepareBlock is not available")},signBlock:()=>{throw new Error("signBlock is not available")}}}s.signer={getAddress:()=>{throw t("getAddress"),new Error("getAddress is not available. Please use getAccounts from kondor")},getPrivateKey:()=>{throw t("getPrivateKey"),new Error("getPrivateKey is not available")},signTransaction:()=>{throw t("signTransaction"),new Error("signTransaction is not available. Use sendTransaction instead")},signHash:()=>{throw t("signHash"),new Error("signHash is not available. Use sendTransaction instead")},signMessage:()=>{throw t("signMessage"),new Error("signMessage is not available. Use sendTransaction instead")},prepareBlock:()=>{throw t("prepareBlock"),new Error("prepareBlock is not available")},signBlock:()=>{throw t("signBlock"),new Error("signBlock is not available")},prepareTransaction:async e=>(t("prepareTransaction"),await r.sendDomMessage("background","signer:prepareTransaction",{transaction:e})),sendTransaction:async(e,s,n)=>{t("sendTransaction");const{transaction:o,receipt:a}=await r.sendDomMessage("popup","signer:sendTransaction",{transaction:e,broadcast:s,abis:n});return{receipt:a,transaction:{...o,wait:async(e="byBlock",s=3e4)=>r.sendDomMessage("background","provider:wait",{txId:o.id,type:e,timeout:s})}}}},s.getSigner=o,s.default=o}},s={};function n(r){var t=s[r];if(void 0!==t)return t.exports;var o=s[r]={exports:{}};return e[r](o,o.exports,n),o.exports}(()=>{const e=n(599),s=n(942),r=n(339);window.kondor={provider:e.provider,signer:s.signer,getSigner:s.getSigner,getAccounts:r.getAccounts}})()})();